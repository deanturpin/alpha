#!/bin/bash

# Read hosts
mapfile hosts < hosts


# Declare masks - CIDR
declare -A netmasks=( [10.10]=16 [192.168.0.0]=16 )

# Decimal to binary netmask converter
function decimal2binary {

	readonly local d2b=({0,1}{0,1}{0,1}{0,1}{0,1}{0,1}{0,1}{0,1})
	local binary=
	local ip=$1

	# Extract decimals
	while [[ $ip =~ [[:digit:]]{1,3} ]]; do
		# Convert decimal to binary and append to result
		binary+=${d2b[$BASH_REMATCH]}
		
		# Remove the match from current search
		ip=${ip/$BASH_REMATCH//}
	done

	echo $binary
}

# Extract IPs and initialise nodes
declare -A nodes

for (( i=0; i<${#hosts[*]}; ++i )); do
	[[ ${hosts[i]} =~ ^[[:digit:]\.]{7,} ]] && nodes[$BASH_REMATCH]=unknown
done

# Iterate through the netmasks and compare them to each host
for netmask in ${!netmasks[*]}; do
	# Convert netmask
	netmask_binary=$(decimal2binary $netmask)

	# Trim host identifier
	width=${netmasks[$netmask]}
	netmask_binary=${netmask_binary:0:$width}

	for host in ${hosts[*]}; do
		host_binary=$(decimal2binary $host)
		[[ $host_binary =~ ^$netmask_binary ]] && nodes[$host]=$netmask
	done
done

# Header
echo "graph { node [style=filled]; node [fillcolor=red];"

# Dump netmasks
echo -e "\n\t// Netmasks"
for netmask in ${!netmasks[*]}; do echo -e "\t\"$netmask\" [fillcolor=cyan]"; done

# Dump node info
echo -e "\n\t// Nodes"
for node in ${!nodes[*]}; do echo -e "\t\"$node\" [fillcolor=white]"; done

# Dump connections
echo -e "\n\t// Connections"
for node in ${!nodes[*]}; do echo -e "\t\"$node\" -- \"${nodes[$node]}\""; done

# Footer
echo "}"
