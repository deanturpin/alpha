#!/bin/bash

# Declare hosts
hosts=(
192.168.109.1 192.168.109.2 192.168.109.3 192.168.109.4 192.168.109.5
192.168.109.7 192.168.109.8 10.226.0.1 10.226.0.2 10.226.1.3 10.227.1.3
192.168.109.6 10.226.0.4 10.22.0.4 10.22.0.5 192.168.107.230 192.168.107.231
)

# Declare masks - CIDR
declare -A netmasks
netmasks=(
[10.226.0.0]=16
# [192.168.109.0]=27 [192.168.107.0]=24
)

# echo hosts ${#hosts[*]}
# echo masks ${#netmasks[*]}

# Decimal to binary netmask converter
function decimal2binary {

	readonly local d2b=({0,1}{0,1}{0,1}{0,1}{0,1}{0,1}{0,1}{0,1})
	local binary=
	local ip=$1

	while [[ $ip =~ [[:digit:]]{1,3} ]]
	do
		binary+=${d2b[$BASH_REMATCH]}
		
		# Remove the match from current search
		ip=${ip/$BASH_REMATCH//}
	done

	echo $binary
}

# Iterate through each netmask and compare it to each host
for netmask in ${!netmasks[*]}
do
	binary=$(decimal2binary $netmask)
	echo ${binary}

	for host in ${hosts[*]}
	do
		echo -e \\t$(decimal2binary $host)
	done
done

exit ########### end

for line in "${hosts[*]}"
do
	echo $line
done

# Header
cat <<!
graph
{
	node [style=filled fillcolor=cyan]

!

# Examine hosts
for ip in ${!hosts[*]}
do
	# Test each mask
	for mask in ${!masks[*]}
	do
		# Stash mask name if the ip matches and stop search
		if [[ $ip =~ $mask ]]
		then
			hosts[$ip]=${masks[$mask]}
			break
		fi
	done
done

# Dump connections
for ip in ${!hosts[@]}
do
	echo -e "\t\"$ip\" -- \"${hosts[$ip]}\""
done

# Footer
cat <<!

	// $(date)
}
!
