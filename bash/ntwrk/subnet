#!/bin/bash

# Declare hosts
hosts=(
192.168.109.1 192.168.109.2 192.168.109.3 192.168.109.4 192.168.109.5
192.168.109.7 192.168.109.8 10.226.0.1 10.226.0.2 10.226.1.3 10.227.1.3
192.168.109.6 10.226.0.4 10.22.0.4 10.22.0.5 192.168.107.230 192.168.107.231
)

# Declare masks - CIDR
declare -A netmasks=( [10.226.0.0]=16 [192.168.109.0]=27 [192.168.107.0]=24 )

# Decimal to binary netmask converter
function decimal2binary {

	readonly local d2b=({0,1}{0,1}{0,1}{0,1}{0,1}{0,1}{0,1}{0,1})
	local binary=
	local ip=$1

	# Extract decimals
	while [[ $ip =~ [[:digit:]]{1,3} ]]; do
		# Convert decimal to binary and append to result
		binary+=${d2b[$BASH_REMATCH]}
		
		# Remove the match from current search
		ip=${ip/$BASH_REMATCH//}
	done

	echo $binary
}

# Initialise nodes
declare -A nodes

for host in ${hosts[*]}; do
	nodes[$host]=unknown
done

# Iterate through the netmasks and compare them to each host
for netmask in ${!netmasks[*]}; do
	# Convert netmask
	netmask_binary=$(decimal2binary $netmask)

	# Trim host identifier
	width=${netmasks[$netmask]}
	netmask_binary=${netmask_binary:0:$width}

	for host in ${hosts[*]}; do
		host_binary=$(decimal2binary $host)
		[[ $host_binary =~ ^$netmask_binary ]] && nodes[$host]=$netmask
	done
done

# Header
echo "graph { node [style=filled]; node [fillcolor=red];"

# Dump netmasks
echo -e "\n\t// Netmasks"
for netmask in ${!netmasks[*]}; do
	echo -e "\t\"$netmask\" [fillcolor=cyan]"
done

# Dump node info
echo -e "\n\t// Nodes"
for node in ${!nodes[*]}; do
	echo -e "\t\"$node\" [fillcolor=white]"
done

# Dump connections
echo -e "\n\t// Connections"
for node in ${!nodes[*]}; do
	echo -e "\t\"$node\" -- \"${nodes[$node]}\""
done

# Footer
echo "}"
