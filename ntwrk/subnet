#!/bin/bash

# mapfile hosts < hosts

# Declare hosts
declare -A hosts
hosts=(
[192.168.109.1]=unknown
[192.168.109.2]=unknown
[192.168.109.3]=unknown
[192.168.109.4]=unknown
[192.168.109.5]=unknown
[192.168.109.7]=unknown
[192.168.109.8]=unknown
[10.226.0.1]=unknown
[10.226.0.2]=unknown
[10.226.1.3]=unknown
[10.227.1.3]=unknown
[192.168.109.6]=unknown
[10.226.0.4]=unknown
[10.22.0.4]=unknown
[10.22.0.5]=unknown
)

# Declare masks - CIDR
declare -A masks
masks=(
[10.226.0.0]=16
[192.168.109.0]=27
)

echo hosts ${#hosts[*]}
echo masks ${#masks[*]}

# Expand masks
decimal2binary=({0,1}{0,1}{0,1}{0,1}{0,1}{0,1}{0,1}{0,1})

for mask in ${!masks[*]}
do
	# echo $mask

	while [[ $mask =~ [[:digit:]]{1,3} ]]
	do
		echo ${decimal2binary[BASH_REMATCH]}

		# Remove the match from current search
		mask=${mask/$BASH_REMATCH//}
	done
done

exit ########### end

for line in "${hosts[*]}"
do
	echo $line
done

# Header
cat <<!
graph
{
	node [style=filled fillcolor=cyan]

!

# Examine hosts
for ip in ${!hosts[*]}
do
	# Test each mask
	for mask in ${!masks[*]}
	do
		# Stash mask name if the ip matches and stop search
		if [[ $ip =~ $mask ]]
		then
			hosts[$ip]=${masks[$mask]}
			break
		fi
	done
done

# Dump connections
for ip in ${!hosts[@]}
do
	echo -e "\t\"$ip\" -- \"${hosts[$ip]}\""
done

# Footer
cat <<!

	// $(date)
}
!
